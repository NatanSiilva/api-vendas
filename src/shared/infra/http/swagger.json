{
  "openapi": "3.0.0",
  "info": {
    "title": "API vendas",
    "description": "API de vendas - desenvolvida para estudos",
    "contact": {
      "name": "Natanael Silva",
      "email": "contato@natandev.com.br"
    },
    "version": "1.0.0",
    "servers": [
      {
        "url": "https://apivendas.natandev.com.br/"
      }
    ]
  },
  "paths": {
    "/sessions": {
      "post": {
        "summary": "Autenticação do usuário",
        "description": "Essa rota é responsável por da acesso a aplicação",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sessions"
              },
              "examples": {
                "Sessions": {
                  "value": {
                    "email": "contato@natandev.com",
                    "password": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "Incorrect email/password combination"
          },
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "user": {},
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "put": {
        "summary": "Alterar os dados do usuário logado",
        "description": "Rota responsável por atualizar os dados do usuário logado",
        "tags": ["Profile"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              },
              "examples": {
                "Profile": {
                  "value": {
                    "name": "Natanael Silva",
                    "email": "contato@natandev1.com",
                    "old_password": "123456",
                    "password": "111111",
                    "password_confirmation": "111111"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "Old password does not match."
          },
          "200": {
            "description": "Data updated as success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Consultar os dados do usuário logado",
        "description": "Rota responsável por consultar os dado do usuário logado",
        "tags": ["Profile"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "User not found"
          },
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "summary": "Atualizar o avatar do usuário logado",
        "description": "Essa rota é responsável por atualizar o avatar do usuário logado",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "email": {
                  "type": "string"
                }
              },
              "examples": {
                "Avatar": {
                  "value": {
                    "avatar": "https://avatars.githubusercontent.com/u/66763596?v=4"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "User not found"
          },
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Criar novo usuário",
        "description": "Essa rota é responsável por criar usuário",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              },
              "examples": {
                "Users": {
                  "value": {
                    "name": "Lucas Silva",
                    "email": "lucas-silva@email.com",
                    "password": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "Email address already used"
          },
          "200": {
            "description": "Successfully created product",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Listar todos os usuários",
        "description": "Essa rota é responsável por criar usuário",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "description": "Consulta pelas chaves name + email do usuário",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "200": {
            "description": "Successfully created product"
          }
        }
      }
    },
    "/users/id/{id}": {
      "get": {
        "summary": "Consultar os dados do usuário pelo id",
        "description": "Essa rota é responsável por consultar os dados do suário pelo id",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "description": "Consulta pelo id do usuário",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "User not found"
          },
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/users/forgot-password": {
      "post": {
        "summary": "Enviar um token de recuperação de senha para o email do usuário ",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "schema": {
              "$ref": "#/components/schemas/Forgot-password"
            },
            "application/json": {
              "examples": {
                "Users": {
                  "value": {
                    "email": "lucas-silva@email.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "User does not exists"
          },
          "200": {
            "description": "email sent successfully"
          }
        }
      }
    },
    "/users/reset-password": {
      "post": {
        "summary": "Atualizar a senha do usuário com um token que foi enviado para o email do usuário",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reset-password"
              },
              "examples": {
                "Reset-password": {
                  "value": {
                    "token": "4f9df3d7-4f73-4c83-b35c-830ac5476efc",
                    "password": "123456",
                    "password_confirmation": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "User Token does not exists or User does not exists."
          },
          "200": {
            "description": "email sent successfully"
          }
        }
      }
    },
    "/products": {
      "post": {
        "summary": "Cadastrar um novo produto",
        "description": "Essa rota é responsável por cadastrar um novo produto",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "examples": {
                "Product": {
                  "value": {
                    "name": "Book 01",
                    "price": 100,
                    "quantity": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "There is already one product with this name"
          },
          "200": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Listar todos os produtos",
        "description": "Essa rota é responsável por listar todos os produtos",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "Not product"
          },
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/products/id/{id}": {
      "get": {
        "summary": "Consultar os dados do produto pelo id",
        "description": "Essa rota é responsável por consultar os dados do produto pelo id",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "description": "Consulta pelo id do produto",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "Product not found"
          },
          "200": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "summary": "Deletar o produto",
        "description": "Essa rota é responsável por deletar o produto",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "description": "Deletar pelo id do produto",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "Product not found"
          },
          "200": {
            "description": "Ok"
          }
        }
      },
      "put": {
        "summary": "Atualizar o produto",
        "description": "Essa rota é responsável por atualizar o produto",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "examples": {
                "Product": {
                  "value": {
                    "name": "Book 01",
                    "price": 100,
                    "quantity": 10
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "description": "Deletar pelo id do produto",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "There is already one product with this name"
          },
          "200": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "post": {
        "summary": "Cadastrar um novo cliente",
        "description": "Essa rota é responsável por cadastrar um novo cliente",
        "tags": ["Customers"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customers"
              },
              "examples": {
                "Customers": {
                  "value": {
                    "name": "Luiz Silva",
                    "email": "luiz@email.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "Email address already used"
          },
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Listar todos os clientes",
        "description": "Essa rota é responsável por listar todos os clientes",
        "tags": ["Customers"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "Not customers"
          },
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/customers/id/{id}": {
      "get": {
        "summary": "Consultar os dados do cliente pelo id",
        "description": "Essa rota é responsável por consultar os dados do cliente pelo id",
        "tags": ["Customers"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "description": "Consulta pelo id do cliente",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "Customers not found"
          },
          "200": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "summary": "Deletar o cliente",
        "description": "Essa rota é responsável por deletar o cliente",
        "tags": ["Customers"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "description": "Deletar pelo id do cliente",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "Cliente not found"
          },
          "200": {
            "description": "Ok"
          }
        }
      },
      "put": {
        "summary": "Atualizar o cliente",
        "description": "Essa rota é responsável por atualizar os dados dp  cliente",
        "tags": ["Customers"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              },
              "examples": {
                "Product": {
                  "value": {
                    "name": "Luiz Silva",
                    "email": "luiz@email.com"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "description": "Deletar pelo id do cliente",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "There is already one customer with this email."
          },
          "200": {
            "description": "Customers updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "post": {
        "summary": "Cadastrar um novo pedido",
        "description": "Essa rota é responsável por cadastrar um novo pedido",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orders"
              },
              "examples": {
                "Orders": {
                  "value": {
                    "customer_id": "0f6430ab-3001-418f-819c-376f63f1f5fd",
                    "products": [
                      {
                        "id": "f8d1d127-36d5-47ce-a3ba-523c0bf79b16",
                        "quantity": 1
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "Product not found"
          },
          "200": {
            "description": "Ok 1",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "customer": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    },
                    "order_products": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "order_id": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Listar todos os pedidos",
        "description": "Essa rota é responsável por listar todos os pedidos",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "401": {
            "description": "Unauthorized, JWT Token is missing"
          },
          "400": {
            "description": "Not orders"
          },
          "200": {
            "description": "Ok"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Sessions": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "api-vendas@email.com"
          },
          "password": {
            "type": "string",
            "example": "123456"
          }
        }
      },
      "Profile": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do usuário",
            "example": "Victor"
          },
          "email": {
            "type": "string",
            "description": "Novo e-mail do usuário",
            "example": "breno@email.com"
          },
          "old_password": {
            "type": "string",
            "description": "Senha antiga do usuário",
            "example": "123456"
          },
          "password": {
            "type": "string",
            "description": "Nova senha usuário",
            "example": "teste123"
          },
          "password_confirmation": {
            "type": "string",
            "description": "Confirmar a nova senha do usuário",
            "example": "teste123"
          }
        }
      },
      "Users": {
        "type": "object",
        "required": ["name", "email, password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do usuário",
            "example": "Lucas Silva"
          },
          "email": {
            "type": "string",
            "description": "E-mail do usuário",
            "example": "lucas-silva@email.com"
          },
          "password": {
            "type": "string",
            "description": "Senha do usuário",
            "example": "123456"
          }
        }
      },
      "Forgot-password": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "Email a ser enviado o token de recuperação",
            "example": "teste@teste.com"
          }
        }
      },
      "Reset-password": {
        "type": "object",
        "required": ["token", "password", "password_confirmation"],
        "properties": {
          "token": {
            "type": "string",
            "description": "Token que foi enviado para o email de recuperação",
            "example": "4f9df3d7-4f73-4c83-b35c-830ac5476efc"
          },
          "password": {
            "type": "string",
            "description": "Nova senha",
            "example": "123456"
          },
          "password_confirmation": {
            "type": "string",
            "description": "Confirmar a nova senha",
            "example": "123456"
          }
        }
      },
      "Product": {
        "type": "object",
        "required": ["name", "price", "quantity"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do produto",
            "example": "Book 01"
          },
          "price": {
            "type": "number",
            "description": "Valor do produto",
            "example": "100"
          },
          "quantity": {
            "type": "number",
            "description": "Quantidade do produto",
            "example": "1"
          }
        }
      },
      "Customers": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do cliente",
            "example": "Luiz de Oliveira"
          },
          "email": {
            "type": "string",
            "description": "E-mail do cliente",
            "example": "luiz@email.com"
          }
        }
      },
      "Orders": {
        "type": "object",
        "required": ["products", "customer_id"],
        "properties": {
          "customer_id": {
            "type": "string",
            "description": "Id do cliente",
            "example": "3c9d337e-adeb-4bc4-9c72-e252cc33bafa"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["id", "quantity"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id do produto",
                  "example": "3c9d337e-adeb-4bc4-9c72-e252cc33bafa"
                },
                "quantity": {
                  "type": "number",
                  "description": "Quantidade do produto no pedido",
                  "example": "1"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
